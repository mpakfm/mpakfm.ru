<?php

$finder = PhpCsFixer\Finder::create()
    ->in(__DIR__)
    ->exclude('var')
;

return PhpCsFixer\Config::create()
    ->setRules([
        '@PhpCsFixer' => true,
        'array_syntax' => ['syntax' => 'short'],
        'align_multiline_comment' => true,
        'array_indentation' => true,
        'binary_operator_spaces' => [
                    'default'   => null,
                    'operators' => [
                      // Объявление массивов
                      '=>'  => 'align_single_space',
                      // Операторы присваивания
                      '='   => 'align_single_space',
                      '&='  => 'align_single_space',
                      '.='  => 'align_single_space',
                      '/='  => 'align_single_space',
                      '-='  => 'align_single_space',
                      '%='  => 'align_single_space',
                      '*='  => 'align_single_space',
                      '|='  => 'align_single_space',
                      '+='  => 'align_single_space',
                      '<<=' => 'align_single_space',
                      '>>=' => 'align_single_space',
                      '^='  => 'align_single_space',
                      '**=' => 'align_single_space',
                      // Операторы вычислений
                      '|'   => 'single_space',
                      '^'   => 'single_space',
                      '+'   => 'single_space',
                      '-'   => 'single_space',
                      '&'   => 'single_space',
                      '*'   => 'single_space',
                      '/'   => 'single_space',
                      '%'   => 'single_space',
                      '**'  => 'single_space',
                      '>>'  => 'single_space',
                      '<<'  => 'single_space',
                      // Тернарный оператор
                      '??'  => 'single_space',
                      // Логические операторы
                      '<'   => 'single_space',
                      '>'   => 'single_space',
                      '&&'  => 'single_space',
                      '||'  => 'single_space',
                      '=='  => 'single_space',
                      '>='  => 'single_space',
                      '===' => 'single_space',
                      '!='  => 'single_space',
                      '<>'  => 'single_space',
                      '!==' => 'single_space',
                      '<='  => 'single_space',
                      '<=>' => 'single_space',
                      'and' => 'single_space',
                      'or'  => 'single_space',
                      'xor' => 'single_space',
                    ],
                ],
        'blank_line_before_statement' => true,
        'cast_spaces' => ['space' => 'single'],
        'combine_consecutive_issets' => true,
        'combine_consecutive_unsets' => true,
        'compact_nullable_typehint' => true,
        'concat_space' => ['spacing' => 'one'],
        'escape_implicit_backslashes' => true,
        'explicit_indirect_variable' => true,
        'explicit_string_variable' => true,
        'fully_qualified_strict_types' => true,
        'general_phpdoc_annotation_remove' => [
                'annotations' => [
                    'inheritdoc',
                ],
            ],
        'heredoc_to_nowdoc' => true,
        'increment_style' => ['style' => 'post'],
        'method_argument_space' => [
                // Если аргумены перечислены более чем в одну строку, то проверяет, что каждый аргумент находится на своей строке
                'ensure_fully_multiline' => true,
                // После запятой, будет ровно 1 пробел
                'keep_multiple_spaces_after_comma' => false,
            ],
        'method_chaining_indentation' => true,
        'multiline_comment_opening_closing' => true,
        'multiline_whitespace_before_semicolons' => ['strategy' => 'new_line_for_chained_calls'],
        'no_alternative_syntax' => true,
        'no_binary_string' => true,
        'no_blank_lines_after_phpdoc' => true,
        'no_extra_blank_lines' => ['tokens' => [
            'break',
            'continue',
            'curly_brace_block',
            'extra',
            'parenthesis_brace_block',
            'return',
            'square_brace_block',
            'throw',
            'use',
        ]],
        'no_null_property_initialization' => true,
        'no_short_echo_tag' => true,
        'no_superfluous_elseif' => true,
        'no_unset_cast' => true,
        'no_useless_else' => true,
        'no_useless_return' => true,
        'no_unused_imports' => true,
        'ordered_class_elements' => true,
        'ordered_imports' => true,
        'php_unit_fqcn_annotation' => false,
        'php_unit_internal_class' => true,
        'php_unit_method_casing' => true,
        'php_unit_ordered_covers' => true,
        'php_unit_test_class_requires_covers' => true,
        'phpdoc_add_missing_param_annotation' => true,
        'phpdoc_no_empty_return' => true,
        'phpdoc_order' => true,
        'phpdoc_summary' => false,
        'phpdoc_types_order' => true,
        'phpdoc_var_annotation_correct_order' => true,
        'protected_to_private' => true,
        'return_assignment' => true,
        'return_type_declaration' => ['space_before' => 'none'],
        'simple_to_complex_string_variable' => true,
        'single_blank_line_before_namespace' => true,
        'single_line_comment_style' => true,
        'single_line_throw' => false,
        'yoda_style' => false,
    ])
    ->setFinder($finder)
;
